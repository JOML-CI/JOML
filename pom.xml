<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.joml</groupId>
	<artifactId>joml</artifactId>
	<version>1.9.3-SNAPSHOT</version>
	<name>JOML</name>
	<description>Java OpenGL Math Library</description>
	<inceptionYear>2015</inceptionYear>
	<url>http://joml.org</url>
	<organization>
		<name>JOML</name>
		<url>http://joml.org</url>
	</organization>
	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/JOML-CI/JOML</url>
		<connection>scm:git:https://github.com/JOML-CI/JOML.git</connection>
		<developerConnection>scm:git:https://github.com/JOML-CI/JOML.git</developerConnection>
	</scm>
	<developers>
		<developer>
			<id>rgreenlees</id>
			<name>Richard Greenlees</name>
			<email>r_ja_greenlees@hotmail.com</email>
			<organization>JOML</organization>
			<organizationUrl>http://joml.org</organizationUrl>
		</developer>
		<developer>
			<id>kburjack</id>
			<name>Kai Burjack</name>
			<email>kburjack@googlemail.com</email>
			<organization>JOML</organization>
			<organizationUrl>http://joml.org</organizationUrl>
		</developer>
	</developers>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.2</maven.compiler.source>
		<maven.compiler.target>1.2</maven.compiler.target>
		<platform>__JRE__</platform>
		<hasNio>__HAS_NIO__</hasNio>
		<javaExclude>org/joml/jre/**</javaExclude>
		<variant>joml</variant>
	</properties>
	<distributionManagement>
		<snapshotRepository>
			<id>oss.sonatype.org</id>
			<name>Sonatype Snapshot Repository</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>oss.sonatype.org</id>
			<name>Sonatype Staging Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
	</distributionManagement>
	<profiles>
		<profile>
			<id>jdk3</id>
			<activation>
				<property>
					<name>jdk3</name>
				</property>
			</activation>
			<properties>
				<variant>joml-jdk3</variant>
				<hasNio>__NHAS_NIO__</hasNio>
				<javaExclude>org/joml/jre/**</javaExclude>
			</properties>
		</profile>
		<profile>
			<id>jdk9</id>
			<activation>
				<jdk>9</jdk>
			</activation>
			<properties>
				<!-- JDK9 cannot handle < 1.6 anymore -->
				<maven.compiler.source>1.6</maven.compiler.source>
				<maven.compiler.target>1.6</maven.compiler.target>
			</properties>
			<build>
				<plugins>
					<!--
						Make sure the jdk9 profile is only used with a
						1.9 JDK, and not forcefully enabled via -Pjdk9, because
						antrun will not work on earlier JDKs, because of missing
						tools.jar.
					-->
					<plugin>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>1.4.1</version>
						<executions>
							<execution>
								<id>enforce-versions</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireJavaVersion>
											<version>1.9</version>
										</requireJavaVersion>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!--
						Use the antrun plugin to build and run a post-processing
						Java application to rewrite the Java class file
						version from 1.6 back to 1.2 in all compiled class files.
					-->
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>process-classes</phase>
								<configuration>
									<target>
										<echo message="Post-process compiled class files..."></echo>
										<mkdir dir="${project.build.directory}/buildhelper" />
										<javac
											srcdir="buildhelper"
											destdir="${project.build.directory}/buildhelper"
											includeantruntime="false">
											<classpath refid="maven.plugin.classpath" />
										</javac>
										<java classname="Java6to2" classpathref="maven.plugin.classpath">
											<classpath>
												<pathelement location="${project.build.directory}/buildhelper" />
											</classpath>
											<arg value="${project.build.outputDirectory}" />
										</java>
										<echo message="Post-processing done."></echo>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.ow2.asm</groupId>
								<artifactId>asm</artifactId>
								<version>5.2</version>
							</dependency>
						</dependencies>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!--
				Includes the native shared libraries in the jar.
				This is only necessary when running JOML under Java 9
				and _not_ using -Djoml.nounsafe.
			-->
			<id>with-natives</id>
			<activation>
				<property>
					<name>with-natives</name>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>native/build</directory>
						<filtering>false</filtering>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<!--
				Builds a GWT module JAR file by preprocessing with the __GWT__ define.
			-->
			<id>gwt</id>
			<activation>
				<property>
					<name>gwt</name>
				</property>
			</activation>
			<properties>
				<!-- Define the '__GWT__' preprocessor variable -->
				<platform>__GWT__</platform>
				<hasNio>__NHAS_NIO__</hasNio>
                <javaExclude>org/joml/jre/java/nio/**</javaExclude>
				<variant>joml-gwt</variant>
			</properties>
			<build>
				<!-- Add the sources to the jar artifact -->
				<resources>
					<resource>
						<directory>${project.build.directory}/generated-sources/preprocessed</directory>
						<includes>
							<include>**/*.java</include>
						</includes>
						<filtering>false</filtering>
					</resource>
					<resource>
						<directory>${project.build.sourceDirectory}</directory>
						<includes>
							<include>org/joml/JOML.gwt.xml</include>
						</includes>
						<filtering>false</filtering>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>deployment</id>
			<activation>
				<property>
					<name>deployment</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<build>
		<sourceDirectory>src</sourceDirectory>
		<testSourceDirectory>test</testSourceDirectory>
		<finalName>${variant}-${project.version}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<!--
										To successfully compile JOML, we need at least a JDK6
										because conditionally loaded classes use > 1.4 features.
									-->
									<version>1.6</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.igormaznitsa</groupId>
				<artifactId>jcp</artifactId>
				<version>6.1.1</version>
				<executions>
					<execution>
						<id>preprocessSources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>preprocess</goal>
						</goals>
						<configuration>
							<source>src</source>
						</configuration>
					</execution>
					<execution>
						<id>processTestSources</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>preprocess</goal>
						</goals>
						<configuration>
							<useTestSources>true</useTestSources>
							<source>test</source>
						</configuration>
					</execution>
					<execution>
						<id>clearGeneratedFolders</id>
						<goals>
							<goal>clear</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<processing>java</processing>
					<keepLines>false</keepLines>
					<verbose>false</verbose>
					<globalVars>
						<property>
							<name>${platform}</name>
							<value>1</value>
						</property>
						<property>
							<name>${hasNio}</name>
							<value>1</value>
						</property>
					</globalVars>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.0</version>
				<configuration>
					<excludes>
						<exclude>org/joml/jre/**</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/META-INF</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}</directory>
									<filtering>false</filtering>
									<include>LICENSE</include>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<!-- Exclude the Java 1.4 API classes when javaExclude is set -->
					<excludes>
						<exclude>${javaExclude}</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<excludes>
						<!-- Exclude the Java 1.4 API classes from the sources jar -->
						<exclude>org/joml/jre/**</exclude>
						<!-- Exclude GWT config -->
						<exclude>org/joml/JOML.gwt.xml</exclude>
					</excludes>
					<!-- Exclude the natives -->
					<excludeResources>true</excludeResources>
				</configuration>
				<executions>
					<execution>
						<id>package-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<configuration>
					<!-- Exclude the Java 1.4 API classes from the javadoc jar -->
					<excludePackageNames>org.joml.jre</excludePackageNames>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>2.5.0</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>javax.validation</groupId>
					<artifactId>validation-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.json</groupId>
					<artifactId>json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>
</project>
